# List of Services
version: '3.8'

services:
  spring:
    build: ./spring   # Look for Dockerfile in this path
    ports:
      - "8080:8080"   # Expose port 8080
    environment:
      # These are used in apllication.property to setup DB connection
      - DB_ADDRESS=jdbc:mysql://mysql:3306
      - DB_DATABASE=template_db
      - DB_USER=root
      - DB_PASSWORD=pwd
    networks:
      - spring-mysql    # Allow the spring app to discover the mysql app
      - spring-react    # Allow the spring app to talk to the react app

  mysql:
    build: ./mysql    # Look for Dockerfile in this path
    environment:
      # Mysql docker image env vars
      - MYSQL_ROOT_PASSWORD=pwd
      - MYSQL_DATABASE=template_db #
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - spring-mysql    # Allow the mysql app to talk to the spring app
    ports:
      - "3306:3306"     # Exposes port 3306 on the host and maps it to port 3306 in the container
      # 
    
  react:
    build: ./react    # Look for Dockerfile in this path
    ports:
      - "3000:3000"   # Expose port 3000
    environment:
      # Tell the react app that our spring server is running here
      - BACKEND_PROXY=http://spring:8080
    networks:
      - spring-react    # Allow the react app to discover the spring app  

  web-scraper:
    build: ./web-scraper    # Look for Dockerfile in this path
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=template_db
      - DB_USER=root
      - DB_PASSWORD=pwd
    depends_on:
      - mysql # Ensures MySQL is started before this
    networks:
      - spring-mysql # Connects to the same network as mysql

volumes:
  mariadb_data:

# List of Networks
networks:               
  spring-mysql:
  spring-react:
